// Mocks generated by Mockito 5.4.4 from annotations
// in bu_passport/test/event_widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:bu_passport/classes/categorized_events.dart' as _i3;
import 'package:bu_passport/classes/event.dart' as _i6;
import 'package:bu_passport/classes/user.dart' as _i7;
import 'package:bu_passport/services/firebase_service.dart' as _i4;
import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseFirestore_0 extends _i1.SmartFake
    implements _i2.FirebaseFirestore {
  _FakeFirebaseFirestore_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCategorizedEvents_1 extends _i1.SmartFake
    implements _i3.CategorizedEvents {
  _FakeCategorizedEvents_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirebaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseService extends _i1.Mock implements _i4.FirebaseService {
  MockFirebaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseFirestore get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeFirebaseFirestore_0(
          this,
          Invocation.getter(#db),
        ),
      ) as _i2.FirebaseFirestore);

  @override
  _i5.Future<List<_i6.Event>> fetchEvents() => (super.noSuchMethod(
        Invocation.method(
          #fetchEvents,
          [],
        ),
        returnValue: _i5.Future<List<_i6.Event>>.value(<_i6.Event>[]),
      ) as _i5.Future<List<_i6.Event>>);

  @override
  List<_i6.Event> fetchEventsForDay(
    DateTime? date,
    List<_i6.Event>? events,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchEventsForDay,
          [
            date,
            events,
          ],
        ),
        returnValue: <_i6.Event>[],
      ) as List<_i6.Event>);

  @override
  List<_i6.Event> filterEvents(
    List<_i6.Event>? events,
    String? query,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterEvents,
          [
            events,
            query,
          ],
        ),
        returnValue: <_i6.Event>[],
      ) as List<_i6.Event>);

  @override
  _i5.Future<_i7.Users?> fetchUser(String? userUID) => (super.noSuchMethod(
        Invocation.method(
          #fetchUser,
          [userUID],
        ),
        returnValue: _i5.Future<_i7.Users?>.value(),
      ) as _i5.Future<_i7.Users?>);

  @override
  _i5.Future<void> saveEvent(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #saveEvent,
          [eventId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> unsaveEvent(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #unsaveEvent,
          [eventId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> hasUserSavedEvent(
    String? userUID,
    String? eventId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #hasUserSavedEvent,
          [
            userUID,
            eventId,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<_i3.CategorizedEvents> fetchAndCategorizeEvents() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAndCategorizeEvents,
          [],
        ),
        returnValue:
            _i5.Future<_i3.CategorizedEvents>.value(_FakeCategorizedEvents_1(
          this,
          Invocation.method(
            #fetchAndCategorizeEvents,
            [],
          ),
        )),
      ) as _i5.Future<_i3.CategorizedEvents>);

  @override
  _i5.Future<_i6.Event?> fetchEventById(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #fetchEventById,
          [eventId],
        ),
        returnValue: _i5.Future<_i6.Event?>.value(),
      ) as _i5.Future<_i6.Event?>);

  @override
  void checkInUserForEvent(
    String? eventID,
    int? eventPoints,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #checkInUserForEvent,
          [
            eventID,
            eventPoints,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<bool> isUserCheckedInForEvent(
    String? userUID,
    String? eventId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isUserCheckedInForEvent,
          [
            userUID,
            eventId,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> updateUserProfileURL(String? profileURL) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfileURL,
          [profileURL],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i6.Event>> fetchEventsFromNow() => (super.noSuchMethod(
        Invocation.method(
          #fetchEventsFromNow,
          [],
        ),
        returnValue: _i5.Future<List<_i6.Event>>.value(<_i6.Event>[]),
      ) as _i5.Future<List<_i6.Event>>);

  @override
  _i5.Future<List<_i7.Users>> fetchAllUsers() => (super.noSuchMethod(
        Invocation.method(
          #fetchAllUsers,
          [],
        ),
        returnValue: _i5.Future<List<_i7.Users>>.value(<_i7.Users>[]),
      ) as _i5.Future<List<_i7.Users>>);
}
